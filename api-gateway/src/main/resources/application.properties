
spring.application.name=api-gateway
server.port=8080


###Eureka
##Indicate the URL that the client must register.
eureka.client.service-url.default-zone=http://localhost:8761/eureka

# This is the ID that will be used to register the Eureka Client, which contains the name and a random value,
# in case we use several instances of the same service, for load balancing.
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}


###Routes
# Inventory service route
## this must be the name of the microservice (spring.application.name=inventory-service)
spring.cloud.gateway.mvc.routes[0].id=inventory-service
spring.cloud.gateway.mvc.routes[0].uri=lb://inventory-service
spring.cloud.gateway.mvc.routes[0].predicates[0]=Path=/api/inventory/**

# Order service route
spring.cloud.gateway.mvc.routes[1].id=orders-service
spring.cloud.gateway.mvc.routes[1].uri=lb://orders-service
spring.cloud.gateway.mvc.routes[1].predicates[0]=Path=/api/order/**

# Product service route
spring.cloud.gateway.mvc.routes[2].id=products-service
spring.cloud.gateway.mvc.routes[2].uri=lb://products-service
spring.cloud.gateway.mvc.routes[2].predicates[0]=Path=/api/product/**


##Log
logging.level.root=info
logging.level.org.springframework.cloud.gateway=trace
